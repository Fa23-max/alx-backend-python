name: Django CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: test_db
          MYSQL_USER: test_user
          MYSQL_PASSWORD: test_password
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
    
    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y default-libmysqlclient-dev build-essential pkg-config
    
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r messaging_app/requirements.txt
        pip install pytest pytest-django pytest-cov flake8 coverage
    
    - name: Run flake8 linting
      run: |
        flake8 messaging_app/ --max-line-length=120 --exclude=*/migrations/*,*/__pycache__/* --count --statistics
    
    - name: Run tests with coverage
      env:
        DJANGO_SETTINGS_MODULE: messaging_app.settings
        DATABASE_URL: mysql://test_user:test_password@127.0.0.1:3306/test_db
        SECRET_KEY: test-secret-key-for-ci
        DEBUG: True
      run: |
        cd messaging_app
        python manage.py collectstatic --noinput
        python manage.py migrate
        python -m pytest chats/tests/ -v --cov=chats --cov-report=xml --cov-report=html
    
    - name: Upload coverage reports to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./messaging_app/coverage.xml
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: true
    
    - name: Upload coverage report as artifact
      uses: actions/upload-artifact@v3
      with:
        name: coverage-report
        path: messaging_app/htmlcov/
    
    - name: Upload test results as artifact
      uses: actions/upload-artifact@v3
      with:
        name: test-results
        path: messaging_app/.pytest_cache/
